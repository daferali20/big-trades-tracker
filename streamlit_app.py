import streamlit as st
import asyncio
import websockets
import json
from threading import Thread

# ุฑุงุจุท WebSocket ููุงุชุตุงู ุจุงูู backend (ุบูุฑู ุฅูู ุฑุงุจุท ุณูุฑูุฑู ุงูุญูููู)
WEBSOCKET_URL = "ws://big-trades-tracker.onrender.com/ws/trades"

st.title("๐ ูุชุชุจุน ุงูุตููุงุช ุงููุจูุฑุฉ ููุฃุณูู (Big Trades Tracker)")

# ููุง ุณูุฎุฒู ุงูุตููุงุช ุงููุงุฑุฏุฉ ูู ูุงุฆูุฉ (ูุญุฏูุฏุฉ ูุขุฎุฑ 50 ุตููุฉ)
trades = []

# ุฏุงูุฉ ุงูุงุณุชูุงุน ููููุจ ุณูููุช ุจุดูู ุบูุฑ ูุชุฒุงูู ูุน ุงูุชุญุฏูุซ ุงูุฏูุฑู ููุตููุงุช
async def listen_trades():
    global trades
    try:
        async with websockets.connect(WEBSOCKET_URL) as websocket:
            while True:
                message = await websocket.recv()
                data = json.loads(message)
                # ุดุฑุท ูุฅุถุงูุฉ ุงูุตููุงุช ุฐุงุช ุญุฌู ูุจูุฑ (ูุซูุงู ุณุนุฑ * ุญุฌู >= 1000)
                if data.get("price", 0) * data.get("volume", 0) >= 1000:
                    trades.insert(0, data)  # ูุถูู ุงูุตููุฉ ูู ุฃูู ุงููุงุฆูุฉ
                    if len(trades) > 50:
                        trades.pop()  # ูุญุงูุธ ุนูู 50 ุตููุฉ ููุท
    except Exception as e:
        st.error(f"ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู WebSocket: {e}")

# ูุชุดุบูู asyncio ูู Streamlit ูุณุชุฎุฏู Thread ูููุตู
def run_async_loop():
    asyncio.run(listen_trades())

# ูุจุฏุฃ ุงูููุจ ุณูููุช ูู ุฎูููุฉ ูุณุชููุฉ ุญุชู ูุง ูุญุฌุจ ูุงุฌูุฉ ุงููุณุชุฎุฏู
if "thread_started" not in st.session_state:
    thread = Thread(target=run_async_loop, daemon=True)
    thread.start()
    st.session_state.thread_started = True

# ุนุฑุถ ุจูุงูุงุช ุงูุตููุงุช ูู ุซุงููุฉ ุชูุฑูุจุงู ูุน ุชุญุฏูุซ ุงูุตูุญุฉ
import time

st.write("ุขุฎุฑ 50 ุตููุฉ ูุจูุฑุฉ (ุณุนุฑ * ุญุฌู >= 1000):")

# ุชุญุฏูุซ ุงููุญุชูู ุชููุงุฆูุงู ูู ุซุงููุฉ
placeholder = st.empty()

for _ in range(1000):  # ุนุฏุฏ ูุฑุงุช ุงูุชุญุฏูุซ (ูููู ุชุบููุฑู)
    if trades:
        # ุนุฑุถ ุฌุฏูู ูุจุณุท ุจุงูุตููุงุช
        placeholder.table([
            {
                "ุงูุณูู": t.get("symbol", ""),
                "ุงูุณุนุฑ": t.get("price", ""),
                "ุงูุญุฌู": t.get("volume", ""),
                "ุงูููุช": t.get("timestamp", "")
            }
            for t in trades
        ])
    else:
        placeholder.text("ุฌุงุฑู ุงูุชุธุงุฑ ุตููุงุช ุฌุฏูุฏุฉ...")

    time.sleep(1)
